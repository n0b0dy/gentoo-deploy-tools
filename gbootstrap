#!/bin/sh
set -e

STAGE3_PATH=""
PORTAGE_PATH=""
EXTRACT_PATH="."

stage3_download(){
  mkdir -p $EXTRACT_PATH
  echo "Download stage3: "
	wget -O - $STAGE3_PATH | tar -C $EXTRACT_PATH -xpjf -
}

portage_download() {
	#wget -Nc  $MIRROR$portage_path$PNAME
  mkdir -p $EXTRACT_PATH"/usr"
  echo "Download portage: "
  wget -O - $PORTAGE_PATH | tar -C $EXTRACT_PATH"/usr" -xpjf -
}

usage_err(){
	info USAGE1 "usage: [OPTION]... <suite> <target> [<mirror> [<script>]]"
	info USAGE2 "Try \`${0##*/} -h' for more information."
	error "$@"
}

usage(){ 
	echo "  Usage: ${0##*/} [options] extract path"
	echo "  Version: $VERSION"
	cat <<EOF
	-s <name>		-stage3
	-p <name>		-portage list

Version: 0.4.1
Licence: GNU GPL version 3 <http://www.gnu.org/licenses/gpl.html>
EOF
 }
 
if [ "$#" -eq 0 ]; then usage;exit 0;fi

 
while getopts ":hs:p:" opt ;
do
  case $opt in
		p) PORTAGE_PATH=$OPTARG ;;
		s) STAGE3_PATH=$OPTARG;;
		h) usage;;
		*) echo "no args";
           echo "For helps $ME -h";
            exit 1
            ;;
  esac
done
#shift $(( OPTIND - 1 )) shift $(($OPTIND-1))
shift $(expr $# - 1) # получение последнего аргумента
EXTRACT_PATH=$1
####################################################

EXTRACT_PATH=$(echo $EXTRACT_PATH | sed 's/\/$//')
####################################################
echo "extract: $EXTRACT_PATH"
if [ -n "$STAGE3_PATH" ]; then
	stage3_download;
fi

if [ -n "$PORTAGE_PATH" ]; then
	portage_download;
fi
